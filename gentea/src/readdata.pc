#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <time.h>
#include "dbutils.h"
#include "utils.h"
#include "defines.h"
#include "typedefs.h"

float readone(int site,int datatype, char *date)
{
  EXEC SQL INCLUDE SQLCA;
  
  EXEC SQL BEGIN DECLARE SECTION;

  SQL_DATE      day;
  ID	        site_id, datatype_id;
  short         value_null_indicator;
  float         value;
  char 		site_name[65];
  
  EXEC SQL END DECLARE SECTION;

  site_id = site;
  datatype_id = datatype;
  
  char *dbName;
  int result;
  
  dbName = NULL; 
  dbName = getenv("HDB_LOCAL");
  
  if (dbName == NULL)
    {
      PrintError("Environment variable HDB_LOCAL not set...\n");
      return(ERROR);
    }
  
  
  if  ((result = SqlConnect (dbName, "app_user", dbName)) == ERROR)
    exit (ERROR);

  fprintf(stderr, "Connected to ORACLE.\n");

  EXEC SQL SELECT value, date_day
     INTO :value, :day
     FROM HDB_SITE_DATATYPE a, R_DAY b
     WHERE SITE_ID = :site_id
     AND DATATYPE_ID = :datatype_id
     AND B.SITE_DATATYPE_ID = A.SITE_DATATYPE_ID
     AND B.DATE_DAY = (SELECT MAX(DATE_DAY) FROM
                       HDB_SITE_DATATYPE A, R_DAY B
     WHERE SITE_ID = :site_id
     AND DATATYPE_ID = :datatype_id
     AND B.SITE_DATATYPE_ID = A.SITE_DATATYPE_ID
     );

  if (sqlca.sqlcode > 0)
  {		
     fprintf(stderr,"Error retrieving data for site id %d, datatype id %d\n",
             site_id, datatype_id);
     exit(2);
  }
  
  /*All that is below this line is just error handling stuff*/
  
  if ((result = SqlDisconnect ()) == ERROR)
    exit(ERROR);

  strcpy(date,day);
  
  return value;

 errrpt:
  
  EXEC SQL WHENEVER SQLERROR CONTINUE;
  fprintf (stderr, "\n %.70s \n",sqlca.sqlerrm.sqlerrmc);
  if ((result = SqlDisconnect ()) == ERROR)
    exit (ERROR);
  exit (1); 
  
}

void errorexit(char *msg)
{	
	fprintf(stdout,"%s",msg);
	exit(EXIT_FAILURE);
}

